name: Terraform-Observe Test Scheduler

on:
  workflow_call:
    inputs:
      skip:
        required: false
        type: string
        description: "example: {\"jobs\": [\"validate-pr-title\", \"single-commit\"]}"
      terraform-version:
        description: 'Terraform version'
        required: false
        type: string
        default: '1.2.9'

jobs:
  app-icon-validation:
    uses: ./.github/workflows/terraform-observe_app-icon-validation.yaml
    with:
      skip: ${{ inputs.skip }}
  commit-validation:
    uses: ./.github/workflows/shared_commit-validation.yaml
    secrets: inherit
    with:
      skip: ${{ inputs.skip }}

  get-test-directories:
    if: "!contains(fromJSON(inputs.skip).jobs, 'terraform-tests')"
    name: Get Terraform Test Directories
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build matrix
        id: matrix
        shell: bash
        run: |
          DIRS="$(find . -path "*tftests/*" ! -path "*.terraform*" -type d )"
          [[ ${#DIRS} > 0 ]] && echo "directories=[\"${DIRS//$'\n'/\",\"}\"]" >> "$GITHUB_OUTPUT" || echo "directories=[]" >> "$GITHUB_OUTPUT"
    outputs:
      directories: ${{ steps.matrix.outputs.directories }}

  terraform-test-apply:
    needs: get-test-directories
    if: ${{ needs.get-test-directories.outputs.directories != '[]' && needs.get-test-directories.outputs.directories != '' }}
    name: Test Terraform Module
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        directory: ${{ fromJson(needs.get-test-directories.outputs.directories) }}
    steps:
      - uses: hashicorp/setup-terraform@v2
        with: 
          terraform_version: ${{ inputs.terraform-version }}
      - uses: actions/checkout@v3
      - name: make test
        run: make test "${{ matrix.directory }}"
        env:
          OBSERVE_CUSTOMER: ${{ secrets.TERRAFORM_MODULES_TEST_OBSERVE_CUSTOMER }}
          OBSERVE_DOMAIN: ${{ secrets.TERRAFORM_MODULES_TEST_OBSERVE_DOMAIN }}
          OBSERVE_USER_EMAIL: ${{ secrets.TERRAFORM_MODULES_TEST_OBSERVE_USER_EMAIL }}
          OBSERVE_USER_PASSWORD: ${{ secrets.TERRAFORM_MODULES_TEST_OBSERVE_USER_PASSWORD }}
          
          GITHUB_WORKSPACE: ${{ github.workspace }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
