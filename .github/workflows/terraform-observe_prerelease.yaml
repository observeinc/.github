name: Publish prerelease
on:
  workflow_call:
    secrets:
      TERRAFORM_MODULES_ROLE_ARN:
        required: true
      TERRAFORM_MODULES_REGION:
        required: true
      TERRAFORM_MODULES_PRERELEASE_SLACK_URL:
        required: false
    inputs:
      release-count:
        required: false
        type: string
        description: Number of releases to preserve in changelog. Default is 0 (regenerates all).
        default: '0'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.TERRAFORM_MODULES_ROLE_ARN }}
          aws-region: ${{ secrets.TERRAFORM_MODULES_REGION }}
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Prepare prerelease version
        run: |
          # We want to know the tag for the last release on this branch; if none can be found, just use the first commit in the repo
          last_release_ref=$(git describe --tags --abbrev=0 2> /dev/null || git rev-list --max-parents=0 HEAD)
          echo commits_since_last_tag=$(git rev-list ${last_release_ref}..HEAD --count) >> $GITHUB_ENV
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          git-push: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          skip-on-empty: 'false'
          skip-version-file: 'true'
          release-count: ${{ inputs.release-count }}
      - name: Mirror in S3
        run: make s3
      - name: Prepare Slack notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.TERRAFORM_MODULES_PRERELEASE_SLACK_URL }}
        if: ${{ env.SLACK_WEBHOOK_URL != '' }}
        run: |
          echo version=$(git describe --tags | sed 's/^v//')-${commits_since_last_tag}-g$(git rev-parse --short HEAD~1) >> $GITHUB_ENV
          echo name=$(echo "$GITHUB_REPOSITORY" | sed 's/^.*terraform-observe-//') >> $GITHUB_ENV
      - name: Notify Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.TERRAFORM_MODULES_PRERELEASE_SLACK_URL }}
        if: ${{ env.SLACK_WEBHOOK_URL != '' }}
        uses: slackapi/slack-github-action@v1.19.0
        with:
          payload: |
            {
              "namespace": "observeinc",
              "name": "${{ env.name }}",
              "system": "observe",
              "version": "${{ env.version }}",
              "repo": "${{ github.repository }}",
              "commit_link": "https://github.com/${{ github.repository }}/tree/${{ github.sha }}"
            }
